services:
  # Web Service - Django Application
  - type: web
    name: 100xjobs-portal
    runtime: python3
    buildCommand: "./build.sh"
    startCommand: "gunicorn jobportal.wsgi:application"
    plan: starter  # Change to 'standard' or 'pro' for production
    region: oregon  # Change to your preferred region
    branch: main
    healthCheckPath: /
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: DEBUG
        value: false
      - key: SECRET_KEY
        generateValue: true  # Render will generate a secure secret key
      - key: DATABASE_URL
        fromDatabase:
          name: 100xjobs-db
          property: connectionString
      - key: ALLOWED_HOSTS
        value: 100xjobs-portal.onrender.com  # Update with your actual service name
    
  # PostgreSQL Database
  - type: pserv
    name: 100xjobs-db
    runtime: postgresql
    plan: starter  # Change to 'standard' or 'pro' for production
    region: oregon  # Should match your web service region
    databaseName: jobportal
    databaseUser: jobportal_user
    ipAllowList: []  # Empty means allow all IPs (Render services can connect)

# Optional: Background Worker (if you add Celery tasks later)
# - type: worker
#   name: 100xjobs-worker
#   runtime: python3
#   buildCommand: "./build.sh"
#   startCommand: "celery -A jobportal worker --loglevel=info"
#   plan: starter
#   region: oregon
#   branch: main
#   envVars:
#     - key: PYTHON_VERSION
#       value: 3.11.0
#     - key: DEBUG
#       value: false
#     - key: SECRET_KEY
#       fromService:
#         type: web
#         name: 100xjobs-portal
#         envVarKey: SECRET_KEY
#     - key: DATABASE_URL
#       fromDatabase:
#         name: 100xjobs-db
#         property: connectionString

# Optional: Redis for caching/sessions (if needed later)
# - type: redis
#   name: 100xjobs-redis
#   plan: starter
#   region: oregon
#   ipAllowList: []
